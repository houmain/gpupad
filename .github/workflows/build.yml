# Github Actions configuration file
name: Build

on:
  #push:    # execute on every push
  release:
    types:
      - published
  
jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
           name: "Linux-x64"
           , os: ubuntu-22.04
           , QT_VERSION: 6.5.3, QT_INST_DIR: /opt, QTDIR: /opt/Qt/6.2.4/gcc_64
           , VCPKG_TRIPLET: "x64-linux-release"
          }
        - {
            # Available Qt versions: https://ddalcino.github.io/aqt-list-server/
            name: "Windows-x64", WIN_ARCH: "x64"
            , os: windows-2022
            , QT_VERSION: 6.8.3, QT_INST_DIR: "C:/", QTDIR: "C:/Qt/6.8.3/msvc2022_64", QT_ARCH: win64_msvc2022_64
            , VCPKG_TRIPLET: "x64-windows-release"
          }
#        - {
#            name: "MacOS-x64"
#            , os: macos-14
#            , QT_VERSION: 6.2.4, QT_INST_DIR: /Users/runner, QTDIR: /Users/runner/Qt/6.2.4/clang_64
#            , VCPKG_TRIPLET: "x64-osx-release"
#          }
    
    env: 
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
      
    steps:
    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
    
    - name: Setup Windows/MSVC
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{matrix.config.WIN_ARCH}}

    - name: Setup Linux
      if: runner.os == 'Linux'
      run: sudo apt -y install pkg-config libxcb*-dev libx11-dev libxrandr-dev

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
       aqtversion: '==3.1.*'
       py7zrversion: '==0.20.*'
       dir: ${{matrix.config.QT_INST_DIR}}
       arch: ${{ matrix.config.QT_ARCH }}
       version: ${{ matrix.config.QT_VERSION }}
       modules: ${{ matrix.config.QT_MODULES }}
       cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install vcpkg packages
      uses: johnwason/vcpkg-action@v6
      with:
          revision: '60d5b6b80f107a200e911ca3820e1eac70675e9d'
          pkgs: 'vulkan "ktx[vulkan]" glslang spirv-cross vulkan-memory-allocator spdlog OpenImageIO'
          triplet: '${{ matrix.config.VCPKG_TRIPLET }}'
          token: ${{ github.token }}
          github-binarycache: true

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_INSTALL_PREFIX=dist -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=${{ matrix.config.VCPKG_TRIPLET }}
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release
    - name: Install
      run: cmake --install ${{github.workspace}}/build --config Release
    - name: Package
      run: cpack --config ${{github.workspace}}/build/CPackConfig.cmake

    - name: Build AppImage
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install libfuse2
        mkdir -p AppDir
        cp -R dist AppDir/usr
        cp AppDir/usr/share/applications/io.github.houmain.gpupad.desktop AppDir
        cp AppDir/usr/share/pixmaps/io.github.houmain.gpupad.png AppDir
        wget -nv -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        chmod a+x linuxdeployqt*.AppImage
        export VERSION='${{ github.ref_name }}'        
        unset QTDIR; unset QT_PLUGIN_PATH; unset LD_LIBRARY_PATH
        ./linuxdeployqt*.AppImage AppDir/usr/bin/gpupad -appimage -extra-plugins=iconengines,imageformats -no-translations -no-copy-copyright-files

    - name: Upload to Github release
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "*.msi;*.dmg;*.tar.gz;GPUpad*.AppImage"
        tags: true
        draft: false
